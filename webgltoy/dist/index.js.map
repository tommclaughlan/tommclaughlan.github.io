{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/webgl/buffers.js","webpack:///./src/webgl/renderer.js","webpack:///./src/circle.js","webpack:///./src/webgl/shaderBuilder.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","buf","createBuffer","data","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","updateData","offset","bufferSubData","Float32Array","BYTES_PER_ELEMENT","loc","GLRenderer","constructor","canvas","this","getContext","positionBuffer","buffer","colorBuffer","scale","translation","numElements","setUp","program","vertexLocation","getAttribLocation","colorLocation","sizeLocation","resolutionLocation","getUniformLocation","scaleLocation","translateLocation","viewport","width","height","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","vertexAttribPointer","FLOAT","enableVertexAttribArray","createProgram","vertexShader","fragmentShader","vShader","loadShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","log","getProgramInfoLog","deleteProgram","source","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","zoom","amount","translate","xTran","yTran","resizeCanvas","w","clientWidth","h","clientHeight","setPoints","points","colors","length","drawPoints","uniform2f","uniform2fv","drawArrays","POINTS","updatePoints","pOffset","cOffset","draw","count","Circle","cx","cy","x","y","color","getPoints","getColors","setColor","move","dx","dy","loadGLSL","async","result","fetch","path","text","loadCompositeGLSL","header","body","vertexShaderBuiltins","translateFunction","scaleFunction","clipSpaceFunction","multiColor","pointShader","fragmentShaderBuiltins","circle","ShaderBuilder","vertexShaderHeader","vertexShaderBody","fragShaderHeader","fragShaderBody","vertexShaderHeaders","vertexShaderBodies","fragShaderHeaders","fragShaderBodies","addVertexShader","addVertexShaderHeader","addVertexShaderBody","addFragmentShader","addFragmentShaderHeader","addFragmentShaderBody","push","build","join","document","querySelector","shaderBuilder","renderer","shaders","addEventListener","e","preventDefault","deltaY","dragging","lastMouse","dragAmount","offsetX","offsetY","circles","Math","random","forEach","lastFrame","Date","now","frameTime","frames","pindex","cindex","col","render","fps","requestAnimationFrame","innerHTML","toFixed","main"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\n/**\n * @param gl {WebGLRenderingContext}\n */\nexport default(gl) => {\n    const buf = gl.createBuffer();\n\n    const data = (data) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n        return buf;\n    }\n\n    /**\n     * @param offset {number}\n     * @param data {Float32Array}\n     */\n    data.updateData = (offset, data) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * Float32Array.BYTES_PER_ELEMENT, data);\n        return buf;\n    }\n\n    data.loc = () => buf;\n    return data;\n}","import buffer from './buffers';\n\nexport class GLRenderer {\n\n    /**\n     *\n     * @param {HTMLCanvasElement} canvas\n     */\n    constructor(canvas) {\n        this.gl = canvas.getContext('webgl');\n        this.positionBuffer = buffer(this.gl);\n        this.colorBuffer = buffer(this.gl);\n\n        this.scale = 8;\n        this.translation = [0, 0];\n        this.numElements = 0;\n    }\n\n    setUp(program) {\n        this.vertexLocation = this.gl.getAttribLocation(program, 'aVertexPosition');\n        this.colorLocation = this.gl.getAttribLocation(program, 'aColor');\n        this.sizeLocation = this.gl.getAttribLocation(program, 'aSize');\n        this.resolutionLocation = this.gl.getUniformLocation(program, 'uResolution');\n        this.scaleLocation = this.gl.getUniformLocation(program, 'uScale');\n        this.translateLocation = this.gl.getUniformLocation(program, 'uTranslate');\n\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n        this.gl.enable(this.gl.BLEND);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n        this.gl.useProgram(program);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer.loc());\n        this.gl.vertexAttribPointer(\n            this.vertexLocation,\n            3,\n            this.gl.FLOAT,\n            false,\n            0,\n            0);\n        this.gl.enableVertexAttribArray(this.vertexLocation);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer.loc());\n        this.gl.vertexAttribPointer(\n            this.colorLocation,\n            4,\n            this.gl.FLOAT,\n            false,\n            0,\n            0);\n        this.gl.enableVertexAttribArray(this.colorLocation);\n    }\n\n    createProgram(vertexShader, fragmentShader) {\n        const vShader = this.loadShader(vertexShader, this.gl.VERTEX_SHADER);\n        const fShader = this.loadShader(fragmentShader, this.gl.FRAGMENT_SHADER);\n\n        const program = this.gl.createProgram();\n        this.gl.attachShader(program, vShader);\n        this.gl.attachShader(program, fShader);\n        this.gl.linkProgram(program);\n\n        if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n            console.log(this.gl.getProgramInfoLog(program));\n            this.gl.deleteProgram(program);\n            return null;\n        }\n        return program;\n    }\n\n    loadShader(source, type) {\n        const shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, source);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.log(this.gl.getShaderInfoLog(shader));\n            this.gl.deleteShader(shader);\n            return null;\n        }\n\n        return shader;\n    }\n\n    zoom(amount) {\n        this.scale *= 1 + amount;\n        if (this.scale <= 0.1) {\n            this.scale = 0.1;\n        }\n    }\n\n    translate([xTran, yTran]) {\n        this.translation = [this.translation[0] + (xTran / this.scale), this.translation[1] + (yTran / this.scale)];\n    }\n\n    resizeCanvas() {\n        const w = this.gl.canvas.clientWidth;\n        const h = this.gl.canvas.clientHeight;\n\n        if (this.gl.canvas.width !== w || this.gl.canvas.height !== h) {\n            this.gl.canvas.width = w;\n            this.gl.canvas.height = h;\n        }\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    }\n\n    setPoints(points, colors) {\n        this.positionBuffer(points);\n        this.colorBuffer(colors);\n        this.numElements = points.length / 3;\n    }\n\n    drawPoints() {\n        this.resizeCanvas();\n        this.gl.uniform2f(this.resolutionLocation, this.gl.canvas.width, this.gl.canvas.height);\n        this.gl.uniform2fv(this.scaleLocation, [this.scale, this.scale]);\n        this.gl.uniform2fv(this.translateLocation, this.translation);\n\n        this.gl.drawArrays(this.gl.POINTS, 0, this.numElements);\n    }\n\n    updatePoints(points, pOffset, colors, cOffset) {\n        this.positionBuffer.updateData(pOffset, points);\n        this.colorBuffer.updateData(cOffset, colors);\n    }\n\n    draw(count) {\n        this.resizeCanvas();\n        this.gl.uniform2f(this.resolutionLocation, this.gl.canvas.width, this.gl.canvas.height);\n\n        this.gl.drawArrays(this.gl.POINTS, 0, count);\n    }\n}","\n\nexport class Circle {\n    constructor(cx, cy, r) {\n        this.x = cx;\n        this.y = cy;\n        this.r = r;\n        this.color = [0.6, 0.6, 0.6, 0.8];\n    }\n\n    getPoints() {\n        return [this.x, this.y, this.r];\n    }\n\n    getColors() {\n        return this.color;\n    }\n\n    setColor(color) {\n        this.color = color;\n    }\n\n    move(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n}","const loadGLSL = async (path) => {\n    const result = await fetch(`dist/${path}`);\n    const body = await result.text();\n    return body;\n}\n\nconst loadCompositeGLSL = async (path) => {\n    return {\n        header : await loadGLSL(`${path}/header.glsl`),\n        body : await loadGLSL(`${path}/body.glsl`)\n    };\n}\n\nexport const vertexShaderBuiltins = {\n    translateFunction : loadGLSL('shaders/vertex/functions/translate.glsl'),\n    scaleFunction : loadGLSL('shaders/vertex/functions/scale.glsl'),\n    clipSpaceFunction : loadGLSL('shaders/vertex/functions/clipSpace.glsl'),\n    multiColor : loadCompositeGLSL('shaders/vertex/multicolor'),\n    pointShader : loadCompositeGLSL('shaders/vertex/point')\n};\n\nexport const fragmentShaderBuiltins = {\n    multiColor : loadCompositeGLSL('shaders/fragment/multicolor'),\n    circle : loadCompositeGLSL('shaders/fragment/circle')\n};\n\nexport class ShaderBuilder {\n    constructor() {\n        this.vertexShaderHeader = ``;\n        this.vertexShaderBody = ``;\n\n        this.fragShaderHeader = ``;\n        this.fragShaderBody = ``;\n\n        this.vertexShaderHeaders = [];\n        this.vertexShaderBodies = [];\n        this.fragShaderHeaders = [];\n        this.fragShaderBodies = [];\n    }\n\n    addVertexShader({ header, body }) {\n        this.addVertexShaderHeader(header);\n        this.addVertexShaderBody(body);\n        return this;\n    }\n\n    addFragmentShader({ header, body }) {\n        this.addFragmentShaderHeader(header);\n        this.addFragmentShaderBody(body);\n        return this;\n    }\n\n    addVertexShaderBody(body) {\n        this.vertexShaderBodies.push(body);\n        return this;\n    }\n\n    addVertexShaderHeader(header) {\n        this.vertexShaderHeaders.push(header);\n        return this;\n    }\n\n    addFragmentShaderBody(body) {\n        this.fragShaderBodies.push(body);\n        return this;\n    }\n\n    addFragmentShaderHeader(header) {\n        this.fragShaderHeaders.push(header);\n        return this;\n    }\n\n    build() {\n        this.vertexShaderHeader = this.vertexShaderHeaders.join(' ');\n        this.vertexShaderBody = this.vertexShaderBodies.join(' ');\n        this.fragShaderHeader = this.fragShaderHeaders.join(' ');\n        this.fragShaderBody = this.fragShaderBodies.join(' ');\n\n        const vertexShader = `\n        precision mediump float;\n        attribute vec4 aVertexPosition;\n\n        ${this.vertexShaderHeader}\n\n        void main() {\n            vec4 v = aVertexPosition;\n\n            ${this.vertexShaderBody}\n\n            gl_Position = v;\n        }\n        `;\n\n        const fragmentShader = `\n            precision mediump float;\n\n            ${this.fragShaderHeader}\n\n            void main() {\n                vec4 v = vec4(0.0, 0.0, 0.0, 1.0);\n\n                ${this.fragShaderBody}\n\n                gl_FragColor = v;\n            }\n        `;\n\n        return { vertexShader, fragmentShader };\n    }\n\n}","import { GLRenderer } from './webgl/renderer';\nimport { Circle } from './circle';\nimport { ShaderBuilder, vertexShaderBuiltins, fragmentShaderBuiltins } from './webgl/shaderBuilder';\n\nmain();\n\nasync function main () {\n    const canvas = document.querySelector('#webgl');\n\n    const shaderBuilder = new ShaderBuilder();\n\n    shaderBuilder.addVertexShaderHeader(await vertexShaderBuiltins.translateFunction);\n    shaderBuilder.addVertexShaderHeader(await vertexShaderBuiltins.scaleFunction);\n    shaderBuilder.addVertexShaderHeader(await vertexShaderBuiltins.clipSpaceFunction);\n    shaderBuilder.addVertexShader(await vertexShaderBuiltins.multiColor);\n    shaderBuilder.addVertexShader(await vertexShaderBuiltins.pointShader);\n    shaderBuilder.addVertexShaderBody(`\n        gl_PointSize = gl_PointSize * 4.0;\n    `);\n    shaderBuilder.addVertexShaderBody(`\n        v = vec4(scale(clipSpace(translate(v.xy))), 0, 1);\n    `);\n\n    shaderBuilder.addFragmentShader(await fragmentShaderBuiltins.multiColor);\n    shaderBuilder.addFragmentShader(await fragmentShaderBuiltins.circle);\n    shaderBuilder.addFragmentShaderBody(`\n        v.a = length(clamp(gl_PointCoord, 0.3, 1.0));\n    `);\n    shaderBuilder.addFragmentShaderBody(`\n        if (length(2.0 * gl_PointCoord - 1.0) * vSize > vSize - 1.0) {\n            v = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    `);\n\n    const renderer = new GLRenderer(canvas);\n\n    const shaders = shaderBuilder.build();\n    const program = renderer.createProgram(shaders.vertexShader, shaders.fragmentShader);\n\n    canvas.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        renderer.zoom(-e.deltaY / 1000);\n    });\n\n    let dragging = false;\n\n    canvas.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        dragging = true;\n    });\n    canvas.addEventListener('mouseup', (e) => {\n        e.preventDefault();\n        dragging = false;\n        lastMouse = [];\n    });\n\n    let lastMouse = [];\n\n    canvas.addEventListener('mousemove', (e) => {\n        e.preventDefault();\n        if (dragging) {\n            if (lastMouse.length > 0) {\n                let dragAmount = [e.offsetX - lastMouse[0], lastMouse[1] - e.offsetY];\n                renderer.translate(dragAmount);\n            }\n\n            lastMouse = [e.offsetX, e.offsetY];\n        }\n    })\n\n    const circles = [];\n\n    for (let i = 0; i < 10000; i++) {\n        circles.push(new Circle(Math.random() * 1500, Math.random() * 800, 5 + Math.random() * 10));\n    }\n\n    circles.forEach((c, i) => {\n        if (i % 4 == 0) {\n            c.setColor([Math.random(), Math.random(), Math.random(), 0.7]);\n        }\n    });\n\n    renderer.setUp(program);\n\n    let lastFrame = Date.now();\n    let frameTime = 0;\n    let frames = 0;\n\n    let points = new Float32Array(circles.length * 3);\n    let colors = new Float32Array(circles.length * 4);\n\n    let pindex = 0;\n    let cindex = 0;\n    circles.forEach((c, i) => {\n        c.r += 2 * (Math.random() - 0.5);\n        if (c.r < 1)  c.r = 1;\n        if (c.r > 50) c.r = 50;\n        c.move(2 * (Math.random() - 0.5), 2 * (Math.random() - 0.5));\n        if (Math.random() > 0.99) {\n            c.setColor([Math.random(), Math.random(), Math.random(), 0.7]);\n        }\n        const p = new Float32Array(c.getPoints());\n        const col = new Float32Array(c.getColors());\n\n        renderer.updatePoints(p, i * 3, col, i * 4);\n\n        points[pindex++] = p[0];\n        points[pindex++] = p[1];\n        points[pindex++] = p[2];\n        colors[cindex++] = col[0];\n        colors[cindex++] = col[1];\n        colors[cindex++] = col[2];\n        colors[cindex++] = col[3];\n    });\n    renderer.setPoints(points, colors);\n\n    const render = () => {\n        fps();\n\n        renderer.drawPoints();\n\n        requestAnimationFrame(render);\n    }\n\n    const fps = () => {\n        let fps = 1000 / (Date.now() - lastFrame);\n        lastFrame = Date.now();\n        frameTime += fps;\n        frames++;\n\n        if (frames === 25) {\n            document.querySelector('#fps').innerHTML = `${(frameTime / frames).toFixed(2)} FPS`;\n            frames = 0;\n            frameTime = 0;\n        }\n    }\n\n    requestAnimationFrame(render);\n}"],"sourceRoot":""}