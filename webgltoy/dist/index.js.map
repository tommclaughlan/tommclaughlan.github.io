{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/webgl/shaders.js","webpack:///./src/webgl/buffers.js","webpack:///./src/circle.js","webpack:///./src/index.js","webpack:///./src/webgl/renderer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","translateFunction","scaleFunction","clipSpaceFunction","vertexShader","fragmentShader","gl","buf","createBuffer","data","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","updateData","offset","bufferSubData","Float32Array","BYTES_PER_ELEMENT","loc","Circle","constructor","cx","cy","this","x","y","color","getPoints","getColors","setColor","move","dx","dy","canvas","document","querySelector","renderer","getContext","program","createProgram","positionBuffer","buffer","colorBuffer","scale","translation","numElements","vertexLocation","getAttribLocation","colorLocation","sizeLocation","resolutionLocation","getUniformLocation","scaleLocation","translateLocation","setUp","viewport","width","height","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","vertexAttribPointer","FLOAT","enableVertexAttribArray","vShader","loadShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","log","getProgramInfoLog","deleteProgram","source","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","zoom","amount","translate","xTran","yTran","resizeCanvas","w","clientWidth","h","clientHeight","setPoints","points","colors","length","drawPoints","uniform2f","uniform2fv","drawArrays","POINTS","updatePoints","pOffset","cOffset","draw","count","addEventListener","e","preventDefault","deltaY","dragging","lastMouse","dragAmount","offsetX","offsetY","circles","push","Math","random","forEach","lastFrame","Date","now","frameTime","frames","pindex","cindex","col","render","fps","requestAnimationFrame","innerHTML","toFixed"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const translateFunction = `\n    uniform vec2 uTranslate;\n\n    vec2 translateVertex(vec2 vertex) {\n        return vertex + uTranslate;\n    }\n    #define TRANSLATE_VERTEX;\n`;\n\nexport const scaleFunction = `\n    uniform vec2 uScale;\n\n    vec2 scaleVertex(vec2 vertex) {\n        return vertex * uScale;\n    }\n    #define SCALE_VERTEX;\n`;\n\nexport const clipSpaceFunction = `\n    #ifndef SCALE_VERTEX\n        vec2 scaleVertex(vec2 vertex) {\n            return vertex;\n        }\n    #endif\n\n    #ifndef TRANSLATE_VERTEX\n        vec2 translateVertex(vec2 vertex) {\n            return vertex;\n        }\n    #endif\n\n    uniform vec2 uResolution;\n\n    vec2 toClipSpace(vec2 vertex) {\n        return scaleVertex((2.0 * (translateVertex(vertex) / uResolution)) - 1.0);\n    }\n    #define TO_CLIP_SPACE;\n`\n\nexport const vertexShader = `\n    precision mediump float;\n    attribute vec4 aVertexPosition;\n    attribute vec4 aColor;\n\n    varying float vSize;\n    varying vec4 vColor;\n\n    #ifndef TO_CLIP_SPACE\n        vec2 toClipSpace(vec2 vertex) {\n            return vertex;\n        }\n    #endif\n\n    void main() {\n        vec2 vertex = toClipSpace(vec2(aVertexPosition[0], aVertexPosition[1]));\n        vSize = aVertexPosition[2];\n        gl_Position = vec4(vertex, 0.0, 1.0);\n        gl_PointSize = vSize;\n        vColor = aColor;\n    }\n`;\n\nexport const fragmentShader = `\n    precision mediump float;\n\n    uniform vec4 uColor;\n\n    varying float vSize;\n    varying vec4 vColor;\n\n    void main() {\n        float distance = length(2.0 * gl_PointCoord - 1.0) * vSize;\n        if (distance > vSize) {\n            discard;\n        } else {\n            gl_FragColor = vColor;\n        }\n    }\n`;","\n/**\n * @param gl {WebGLRenderingContext}\n */\nexport default(gl) => {\n    const buf = gl.createBuffer();\n\n    const data = (data) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n        return buf;\n    }\n\n    /**\n     * @param offset {number}\n     * @param data {Float32Array}\n     */\n    data.updateData = (offset, data) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * Float32Array.BYTES_PER_ELEMENT, data);\n        return buf;\n    }\n\n    data.loc = () => buf;\n    return data;\n}","\n\nexport class Circle {\n    constructor(cx, cy, r) {\n        this.x = cx;\n        this.y = cy;\n        this.r = r;\n        this.color = [0.6, 0.6, 0.6, 0.8];\n    }\n\n    getPoints() {\n        return [this.x, this.y, this.r];\n    }\n\n    getColors() {\n        return this.color;\n    }\n\n    setColor(color) {\n        this.color = color;\n    }\n\n    move(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n}","import { GLRenderer } from './webgl/renderer';\nimport { Circle } from './circle';\n\nconst canvas = document.querySelector('#webgl');\n\n\nconst renderer = new GLRenderer(canvas);\n\ncanvas.addEventListener('wheel', (e) => {\n    e.preventDefault();\n    renderer.zoom(-e.deltaY / 1000);\n});\n\nlet dragging = false;\n\ncanvas.addEventListener('mousedown', (e) => {\n    e.preventDefault();\n    dragging = true;\n});\ncanvas.addEventListener('mouseup', (e) => {\n    e.preventDefault();\n    dragging = false;\n    lastMouse = [];\n});\n\nlet lastMouse = [];\n\ncanvas.addEventListener('mousemove', (e) => {\n    e.preventDefault();\n    if (dragging) {\n        if (lastMouse.length > 0) {\n            let dragAmount = [e.offsetX - lastMouse[0], lastMouse[1] - e.offsetY];\n            renderer.translate(dragAmount);\n        }\n\n        lastMouse = [e.offsetX, e.offsetY];\n    }\n})\n\nconst circles = [];\n\nfor (let i = 0; i < 1000000; i++) {\n    circles.push(new Circle(Math.random() * 1500, Math.random() * 800, 5 + Math.random() * 10));\n}\n\ncircles.forEach((c, i) => {\n    if (i % 4 == 0) {\n        c.setColor([Math.random(), Math.random(), Math.random(), 0.7]);\n    }\n});\n\nrenderer.setUp();\n\nlet lastFrame = Date.now();\nlet frameTime = 0;\nlet frames = 0;\n\nlet points = new Float32Array(circles.length * 3);\nlet colors = new Float32Array(circles.length * 4);\n\nlet pindex = 0;\nlet cindex = 0;\ncircles.forEach((c, i) => {\n    // c.r += 2 * (Math.random() - 0.5);\n    // if (c.r < 1)  c.r = 1;\n    // if (c.r > 50) c.r = 50;\n    // c.move(2 * (Math.random() - 0.5), 2 * (Math.random() - 0.5));\n    // if (Math.random() > 0.99) {\n    //     c.setColor([Math.random(), Math.random(), Math.random(), 0.7]);\n    // }\n    const p = new Float32Array(c.getPoints());\n    const col = new Float32Array(c.getColors());\n\n    // renderer.updatePoints(p, i * 3, col, i * 4);\n\n    points[pindex++] = p[0];\n    points[pindex++] = p[1];\n    points[pindex++] = p[2];\n    colors[cindex++] = col[0];\n    colors[cindex++] = col[1];\n    colors[cindex++] = col[2];\n    colors[cindex++] = col[3];\n});\nrenderer.setPoints(points, colors);\n\nconst render = () => {\n    fps();\n\n    renderer.drawPoints();\n\n    requestAnimationFrame(render);\n}\n\nconst fps = () => {\n    let fps = 1000 / (Date.now() - lastFrame);\n    lastFrame = Date.now();\n    frameTime += fps;\n    frames++;\n\n    if (frames === 25) {\n        document.querySelector('#fps').innerHTML = `${(frameTime / frames).toFixed(2)} FPS`;\n        frames = 0;\n        frameTime = 0;\n    }\n}\n\nrequestAnimationFrame(render);","import { translateFunction, scaleFunction, clipSpaceFunction, vertexShader, fragmentShader } from './shaders';\nimport buffer from './buffers';\n\nexport class GLRenderer {\n\n    /**\n     *\n     * @param {HTMLCanvasElement} canvas\n     */\n    constructor(canvas) {\n        this.gl = canvas.getContext('webgl');\n        this.program = this.createProgram();\n        this.positionBuffer = buffer(this.gl);\n        this.colorBuffer = buffer(this.gl);\n\n        this.scale = 8;\n        this.translation = [0, 0];\n        this.numElements = 0;\n\n        this.vertexLocation = this.gl.getAttribLocation(this.program, 'aVertexPosition');\n        this.colorLocation = this.gl.getAttribLocation(this.program, 'aColor');\n        this.sizeLocation = this.gl.getAttribLocation(this.program, 'aSize');\n        this.resolutionLocation = this.gl.getUniformLocation(this.program, 'uResolution');\n        this.scaleLocation = this.gl.getUniformLocation(this.program, 'uScale');\n        this.translateLocation = this.gl.getUniformLocation(this.program, 'uTranslate');\n    }\n\n    setUp() {\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n        this.gl.enable(this.gl.BLEND);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n        this.gl.useProgram(this.program);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer.loc());\n        this.gl.vertexAttribPointer(\n            this.vertexLocation,\n            3,\n            this.gl.FLOAT,\n            false,\n            0,\n            0);\n        this.gl.enableVertexAttribArray(this.vertexLocation);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer.loc());\n        this.gl.vertexAttribPointer(\n            this.colorLocation,\n            4,\n            this.gl.FLOAT,\n            false,\n            0,\n            0);\n        this.gl.enableVertexAttribArray(this.colorLocation);\n    }\n\n    createProgram() {\n        const vShader = this.loadShader(translateFunction + scaleFunction + clipSpaceFunction + vertexShader, this.gl.VERTEX_SHADER);\n        const fShader = this.loadShader(fragmentShader, this.gl.FRAGMENT_SHADER);\n\n        const program = this.gl.createProgram();\n        this.gl.attachShader(program, vShader);\n        this.gl.attachShader(program, fShader);\n        this.gl.linkProgram(program);\n\n        if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n            console.log(this.gl.getProgramInfoLog(program));\n            this.gl.deleteProgram(program);\n            return null;\n        }\n        return program;\n    }\n\n    loadShader(source, type) {\n        const shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, source);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.log(this.gl.getShaderInfoLog(shader));\n            this.gl.deleteShader(shader);\n            return null;\n        }\n\n        return shader;\n    }\n\n    zoom(amount) {\n        this.scale += amount;\n        if (this.scale <= 0.1) {\n            this.scale = 0.1;\n        }\n    }\n\n    translate([xTran, yTran]) {\n        this.translation = [this.translation[0] + (xTran / this.scale), this.translation[1] + (yTran / this.scale)];\n    }\n\n    resizeCanvas() {\n        const w = this.gl.canvas.clientWidth;\n        const h = this.gl.canvas.clientHeight;\n\n        if (this.gl.canvas.width !== w || this.gl.canvas.height !== h) {\n            this.gl.canvas.width = w;\n            this.gl.canvas.height = h;\n        }\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    }\n\n    setPoints(points, colors) {\n        this.positionBuffer(points);\n        this.colorBuffer(colors);\n        this.numElements = points.length / 3;\n    }\n\n    drawPoints() {\n        this.resizeCanvas();\n        this.gl.uniform2f(this.resolutionLocation, this.gl.canvas.width, this.gl.canvas.height);\n        this.gl.uniform2fv(this.scaleLocation, [this.scale, this.scale]);\n        this.gl.uniform2fv(this.translateLocation, this.translation);\n\n        this.gl.drawArrays(this.gl.POINTS, 0, this.numElements);\n    }\n\n    updatePoints(points, pOffset, colors, cOffset) {\n        this.positionBuffer.updateData(pOffset, points);\n        this.colorBuffer.updateData(cOffset, colors);\n    }\n\n    draw(count) {\n        this.resizeCanvas();\n        this.gl.uniform2f(this.resolutionLocation, this.gl.canvas.width, this.gl.canvas.height);\n\n        this.gl.drawArrays(this.gl.POINTS, 0, count);\n    }\n}"],"sourceRoot":""}